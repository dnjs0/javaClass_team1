Class 수업 요약

자바의 특징 : 객체지향 프로그래밍 언어 >> OOP

객체지향의 특징
* 추상화: 핵심 기능만 추출해 단순화.(기본원칙)
* 정보 은닉: 접근제어자를 사용하여 내부 구현 보호, 접근 제한.(유지보수성 향상)
* 캡슐화: .(getter/setter)사용하여 접근 코드 재사용성 및 안전성 확보
* 상속: 클래스의 기능을 클래스가 물려받아 기능 재사용, 코드 중복 감소.

	클래스 class : 객체 생성을 위한 설계도, 변수와 메서드의 집합

		* 객체, Object : 객체의 실체, 독립적인 식별성을 가지며 상호작용으로 프로그램을 구성
			1) 속성 Property : 객체의 상태(State,특징)를 나타냄 > 인스턴스/클래스 변수로 구분, 접근제어자를 통한 접근제어
			2) 행동 Behavior  객체의 기능(메서드) > 메서드를 캡슐화 하여 조작
		* 인스턴스 Instance : 클래스를 통해 생성된 객체(힙에 할당됨), 고유한 특성과 상태를 가짐

	클래스 구성요소 및 설계
		* 필드 : (인스턴스/클래스)변수 선언하기, 위치에 따라 성질과 역할이 다름 > 객체의 속성을 설정
		* 메서드 : 메서드 선언하기 > 객체의 행동(기능, 필드의 조작) > 
		* 생성자 : 객체생성시 초기화, 클래스명과 동일한 이름, 오버로딩O
	
	클래스 설계 및 선언시 주의사항
		* 한 파일의 클래스 중 public을 가지는 클래스는 대표클래스가 유일하며 '대표클래스명 = 파일명'이다.

	 접근 지정(제어)자(Access Modifier) : 클래스 or 멤버변수에 적용되는 자료형(소속된 클래스를 영역으로 한다.)
		* public : 모두 접근
		* private : 같은 클래스만 접근 가능
		* protected : 같은 패키지내의 상속된 클래스만 가능
		* default : 같은 패키지내에서 접근가능
		
		public > protected > default(생략) > private

